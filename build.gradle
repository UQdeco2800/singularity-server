/*
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

/** Setup the settings for all projects **/
allprojects {
    group = "uq.deco2800.singularity"
    version = "0.6-SNAPSHOT"
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

/** Setup to apply to all sub projects **/
subprojects {
    // Plugins
    apply plugin: 'java';
    apply plugin: 'eclipse';
    apply plugin: 'idea';
    apply plugin: 'jacoco';
    apply plugin: 'checkstyle';

    // Jacoco Settings
    jacoco {
        toolVersion = "0.7.7.201606060606"
    }

    test {
        jacoco {
            append = true
            destinationFile = file("$projectDir/../build/jacoco/jacocoTest.exec")
            classDumpFile = file("$projectDir/../build/jacoco/classdump")
        }
    }

    // CheckStyle Settings
    checkstyle {
        toolVersion = "6.5"
        sourceSets = []
    }

    // Javadoc Settings
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    javadoc {
        options.tags = ['require', 'ensure']
    }

    // Repository and Dependency Settings
    repositories {
        mavenLocal()
        maven { url 'http://deco2800.uqcloud.net/artifactory/libs-release/' }
    }

    dependencies {
        // Dropwizard Framework for the entire server
        compile group: 'io.dropwizard', name: 'dropwizard-core', version: '0.9.3'
        compile group: 'com.esotericsoftware', name: 'kryonet', version: '2.22.0-RC1'

        // Unit testing with JUnit
        testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
        testCompile group: 'junit', name: 'junit', version: '4.12', {
            exclude group: "org.hamcrest", module: "hamcrest-core"
        }
    }
}

// Force projects to be installed by build command
project(':common') {
    apply plugin: 'maven';
    build.finalizedBy install;
}

project(':clients') {
    apply plugin: 'maven';
    build.finalizedBy install;
}

project(':server') {
    apply plugin: 'maven';
    build.finalizedBy install;
}

task cleanJacoco(type: Delete) {
    delete 'build/jacoco'
}
